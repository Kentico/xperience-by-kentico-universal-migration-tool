name: "CI: Build and Test"

on:
  push:
    branches: [main]
    paths:
      - "**.cs"
      - "**.cshtml"
      - "**.tsx"
      - "**.js"
      - "**.json"
      - "**.csproj"
      - "**.props"
      - "**.targets"
      - "**.sln"
      - "**.yml"
  pull_request:
    branches: [main]
    paths:
      - "**.cs"
      - "**.cshtml"
      - "**.tsx"
      - "**.js"
      - "**.json"
      - "**.csproj"
      - "**.targets"
      - "**.sln"
      - "**.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  XBK_DIR: "${{ github.workspace }}/xbk"
  UMT_DIR: "${{ github.workspace }}/umt"
  DB_USER: "kentico"
  DB_DATABASE: "pwtest"
  LICENSE_FILE: "${{ github.workspace }}/license.txt"
  XBK_URL: ""

jobs:
  build-and-test:
    runs-on: ubuntu-latest 
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "${{ secrets.XPERIENCE_BY_KENTICO_DB_PASSWORD }}"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: ${{ env.UMT_DIR }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: <XbK> Install kentico templates
        working-directory: ${{ env.UMT_DIR }}
        run: |
          XBK_CORE_VERSION=$(grep -oP '(?<=<PackageVersion Include="Kentico.Xperience.Core" Version=")[^"]*' Directory.Packages.props)
          echo "XBK_CORE_VERSION: $XBK_CORE_VERSION"
          echo "Kentico.Xperience.Core version: $XBK_CORE_VERSION"

          mkdir ${{ env.XBK_DIR }}
          cd ${{ env.XBK_DIR }}
          dotnet new install Kentico.Xperience.Templates::$XBK_CORE_VERSION

      - name: <XbK> Create Kentico Xperience project
        working-directory: ${{ env.XBK_DIR }}
        run: |
          echo "y" | dotnet new kentico-xperience-mvc -n kentico-boilerplate

      - name: <XbK> Run kentico dbmanager with license
        working-directory: ${{ env.XBK_DIR }}
        run: |
          echo ${{ secrets.XPERIENCE_BY_KENTICO_LICENSE }} > ${{ env.LICENSE_FILE }}
          dotnet kentico-xperience-dbmanager -- \
          -s "localhost" \
          -d "pwtest" \
          -u "sa" \
          -p "${{ secrets.XPERIENCE_BY_KENTICO_DB_PASSWORD }}" \
          -a "${{ secrets.XPERIENCE_BY_KENTICO_ADMIN_PASSWORD }}" \
          --recreate-existing-database \
          --hash-string-salt "<hash_string_salt>" \
          --license-file "${{ env.LICENSE_FILE }}"
          rm ${{ env.LICENSE_FILE }}

      - name: <UMT> Prepare appsettings.json for migration
        working-directory: ${{ env.UMT_DIR }}
        run: |
          EXAMPLE_APPSETTINGS="examples/Kentico.Xperience.UMT.Example.Console/appsettings.json"
          CMS_CONNECTION_STRING=$(jq -r '.ConnectionStrings.CMSConnectionString' "${{ env.XBK_DIR }}/appsettings.json")
          
          # Update the appsettings.json file with new values
          jq --arg conn "$CMS_CONNECTION_STRING" \
             --arg path "${{ env.XBK_DIR }}" \
             '.ConnectionStrings.CMSConnectionString = $conn | .WebApplicationPhysicalPath = $path' \
             "$EXAMPLE_APPSETTINGS" > temp_appsettings.json
          
          mv temp_appsettings.json "$EXAMPLE_APPSETTINGS"
          cat "$EXAMPLE_APPSETTINGS"

      - name: <UMT> Install dependencies and build
        working-directory: ${{ env.UMT_DIR }}
        run: |
          dotnet restore --locked-mode
          dotnet tool restore
          dotnet build

      - name: <UMT> Run example migration
        working-directory: ${{ env.UMT_DIR }}/examples/Kentico.Xperience.UMT.Example.Console/
        run: |
          dotnet run --no-build

      - name: Ensure browser is installed
        working-directory: ${{ env.UMT_DIR }}/tests/Kentico.Xperience.UMT.Tests
        run: pwsh bin/Debug/net8.0/playwright.ps1 install chromium --with-deps

      - name: Prepare test.runsettings
        working-directory: ${{ env.UMT_DIR }}
        run: |
          cat "${{ env.XBK_DIR }}/Properties/launchSettings.json"
          url=$(jq -r '.profiles.kentico_boilerplate.applicationUrl' "${{ env.XBK_DIR }}/Properties/launchSettings.json")
          echo "XBK_URL=$url" >> $GITHUB_ENV

          echo "Setting XbK URL for tests: $url"
          sed -i "s|<BASE_URL>[^<]*</BASE_URL>|<BASE_URL>$url</BASE_URL>|g" test.runsettings
          sed -i "s|<ADMINISTRATION_PASSWORD>[^<]*</ADMINISTRATION_PASSWORD>|<ADMINISTRATION_PASSWORD>${{ secrets.XPERIENCE_BY_KENTICO_ADMIN_PASSWORD }}</ADMINISTRATION_PASSWORD>|g" test.runsettings
          cat test.runsettings

      - name: Start xbk and run tests
        run: |
          cd ${{ env.XBK_DIR }}
          dotnet run --project "${{ env.XBK_DIR }}/kentico-boilerplate.csproj" > /dev/null &
          XBK_PID=$!
          echo "XbK starting..."
          
          timeout=100
          elapsed=0
          adminUrl="$XBK_URL/admin"
          
          while [ $elapsed -lt $timeout ]; do
            if curl -s -f "$adminUrl" > /dev/null 2>&1; then
              echo "XbK is accessible"
              break
            else
              echo "Waiting for XbK to be accessible..."
            fi
            sleep 5
            elapsed=$((elapsed + 5))
          done
          
          cd ${{ env.UMT_DIR }}
          echo "Running tests..."
          mkdir -p reports
          dotnet test --settings:test.runsettings \
          --logger:"html;LogFileName=${{ env.UMT_DIR }}/reports/logFile.html" \
          -e CI=true \
          -- NUnit.NumberOfTestWorkers=3
          tree ${{ env.UMT_DIR }}/tests

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: test-report
          path: ${{ env.UMT_DIR }}/reports/
          retention-days: 10

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-trace
          path: ${{ env.UMT_DIR }}/tests/Kentico.Xperience.UMT.Tests/bin/Debug/net8.0/playwright-traces/trace.zip
          retention-days: 10
