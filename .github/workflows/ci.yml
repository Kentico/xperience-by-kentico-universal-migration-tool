name: "CI: Build and Test"

on:
  push:
    branches: [main, feat/github-actions-pipeline]
    paths:
      - "**.cs"
      - "**.cshtml"
      - "**.tsx"
      - "**.js"
      - "**.json"
      - "**.csproj"
      - "**.props"
      - "**.targets"
      - "**.sln"
      - "**.yml"
  pull_request:
    branches: [main]
    paths:
      - "**.cs"
      - "**.cshtml"
      - "**.tsx"
      - "**.js"
      - "**.json"
      - "**.csproj"
      - "**.props"
      - "**.targets"
      - "**.sln"
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SA_PASSWORD: "Your_password123"
      ACCEPT_EULA: "Y"
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "Your_password123"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      # UMT setup
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          global-json-file: global.json

      - name: Install dependencies
        run: |
          dotnet restore --locked-mode

      - name: Build Solution
        run: |
          dotnet build --configuration Release --no-restore

      # Xperience by Kentico setup
      - name: Get kentico template
        run: |
          dotnet new -i Kentico.Xperience.Templates

      - name: Create Kentico Xperience project
        run: |
          mkdir xbk
          cd xbk
          echo "y" | dotnet new kentico-xperience-mvc -n kentico-boilerplate
          dotnet tool restore
          echo ${{ secrets.XPERIENCE_BY_KENTICO_LICENSE }} > license.lic
          dotnet kentico-xperience-dbmanager -- -s "localhost" -d "pwtest" -u "sa" -p "$SA_PASSWORD" -a "admin" --recreate-existing-database --hash-string-salt "<hash_string_salt>" --license-file "license.lic"
          rm license.lic

      # Test
      - name: Run Kentico Xperience project in background
        run: |
          cd xbk
          nohup dotnet run &

      - name: Wait for Kentico Xperience project to be ready
        run: |
          cd xbk
          echo $(cat Properties/launchSettings.json | jq -r '.profiles.xbk'.applicationUrl)
          for i in {1..10}; do
            if curl -s $(cat Properties/launchSettings.json | jq -r '.profiles.xbk'.applicationUrl); then
              echo "Kentico Xperience project is up and running"
              break
            fi
            echo "Waiting for Kentico Xperience project to be ready..."
            sleep 2
          done

      - name: run tests
        run: |
          #cd xbk
          #export BASE_URL=$(cat Properties/launchSettings.json | jq -r '.profiles.xbk'.applicationUrl)
          dotnet test -c Release --no-build --no-restore

      - name: Stop XbK
        run: |
          pkill -f "dotnet run"
